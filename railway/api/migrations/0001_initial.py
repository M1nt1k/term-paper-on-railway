# Generated by Django 4.1.4 on 2022-12-17 15:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=255, null=True)),
                ('last_name', models.CharField(blank=True, max_length=255, null=True)),
                ('third_name', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Carriage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('place_type', models.CharField(choices=[('RS', 'Плацкарт'), ('CP', 'Купе'), ('SW', 'СВ')], max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('birthday', models.DateField(blank=True)),
                ('pass_serial', models.IntegerField()),
                ('pass_number', models.IntegerField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Train',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('end_city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='trains_end', to='api.city')),
                ('start_city', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='trains_start', to='api.city')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place', models.IntegerField()),
                ('carriage', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to='api.carriage')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to='api.profile')),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='tickets', to='api.train')),
            ],
        ),
        migrations.CreateModel(
            name='Places',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('status', models.BooleanField(default=True)),
                ('carriage', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='api.carriage')),
                ('profile', models.ManyToManyField(related_name='places', to='api.profile')),
            ],
        ),
        migrations.AddField(
            model_name='carriage',
            name='train',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='carriages', to='api.train'),
        ),
        migrations.CreateModel(
            name='Addons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addon', models.IntegerField(choices=[(1, 'Питание'), (2, 'Вагон-ресторан или кафе'), (3, 'ИРС (Информационно-развлекательный сервис'), (4, 'Душ в поезде'), (5, 'Фирменный'), (6, 'Специальные тарифы'), (7, 'Места для инвалидов')])),
                ('train', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='train_addons', to='api.train')),
            ],
        ),
    ]
